#!/bin/bash

DB_USER=argos_user
DEV_DB=argos_dev
TEST_DB=argos_test

if [ -z $1 ]
then
    echo -e "$(tput setaf 3)Tell me what to do...$(tput sgr0)"

elif [ $1 == 'test' ]
then
    FLASK_ENV=TESTING nosetests

elif [ $1 == 'evaluate' ]
then
    FLASK_ENV=TESTING python -c "from resources.evaluate import evaluate; evaluate()"

elif [ $1 == 'profile' ]
then
    FLASK_ENV=TESTING python -c "from resources.profile import profile; profile()"

elif [ $1 == 'db:create' ]
then
    # Create user if it doesn't exist.
    user_exists=`psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='$DB_USER'"`
    if [[ $user_exists != 1 ]]
    then
        echo -e "Creating database user $(tput setaf 3)$DB_USER$(tput sgr0)..."
        createuser -U postgres $DB_USER
    else
        echo -e "Database user $(tput setaf 3)$DB_USER$(tput sgr0) already exists, moving on..."
    fi

    # Create databases if they don't exist.
    for DB_NAME in $DEV_DB $TEST_DB
    do
        if [[ `psql -tAc "SELECT 1 FROM pg_database WHERE datname='$DB_NAME'"` != 1 ]]
        then
            echo -e "Creating database $(tput setaf 3)$DB_NAME$(tput sgr0)..."
            createdb -U postgres -E utf8 -O $DB_USER $DB_NAME -T template0
        else
            echo -e "Database $(tput setaf 3)$DB_NAME$(tput sgr0) already exists, moving on..."
        fi
    done

elif [ $1 == 'db:drop' ]
then
    for DB_NAME in $DEV_DB $TEST_DB
    do
        if [[ `psql -tAc "SELECT 1 FROM pg_database WHERE datname='$DB_NAME'"` == 1 ]]
        then
            echo -e "Dropping database $(tput setaf 3)$DB_NAME$(tput sgr0)..."
            dropdb $DB_NAME
        else
            echo -e "Database $(tput setaf 3)$DB_NAME$(tput sgr0) doesn't exist, moving on..."
        fi
    done

fi
